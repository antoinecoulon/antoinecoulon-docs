"use strict";(self.webpackChunkantoinecoulon_docs=self.webpackChunkantoinecoulon_docs||[]).push([[2484],{8453:(e,a,t)=>{t.d(a,{R:()=>r,x:()=>c});var n=t(6540);const o={},i=n.createContext(o);function r(e){const a=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(i.Provider,{value:a},e.children)}},9820:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"documentation/Langages/JavaScript","title":"JavaScript","description":"Roadmap JavaScript","source":"@site/docs/documentation/Langages/JavaScript.md","sourceDirName":"documentation/Langages","slug":"/documentation/Langages/JavaScript","permalink":"/antoinecoulon-docs/docs/documentation/Langages/JavaScript","draft":false,"unlisted":false,"editUrl":"https://github.com/antoinecoulon/antoinecoulon-docs/tree/master/docs/documentation/Langages/JavaScript.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"JAVA-Spring_boot","permalink":"/antoinecoulon-docs/docs/documentation/Langages/JAVA-Spring_boot"},"next":{"title":"Kotlin","permalink":"/antoinecoulon-docs/docs/documentation/Langages/Kotlin"}}');var o=t(4848),i=t(8453);const r={},c="JavaScript",s={},l=[{value:"All about variables",id:"all-about-variables",level:2},{value:"var",id:"var",level:3},{value:"let",id:"let",level:3},{value:"const",id:"const",level:3}];function d(e){const a={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(a.header,{children:(0,o.jsx)(a.h1,{id:"javascript",children:"JavaScript"})}),"\n",(0,o.jsx)(a.p,{children:(0,o.jsx)(a.a,{href:"https://roadmap.sh/javascript",children:"Roadmap JavaScript"})}),"\n",(0,o.jsx)(a.h2,{id:"all-about-variables",children:"All about variables"}),"\n",(0,o.jsx)(a.h3,{id:"var",children:"var"}),"\n",(0,o.jsx)(a.p,{children:"The var statement declares a function-scoped or globally-scoped variable, optionally initializing it to a value."}),"\n",(0,o.jsx)(a.h3,{id:"let",children:"let"}),"\n",(0,o.jsx)(a.p,{children:"The let declaration declares a block-scoped local variable, optionally initializing it to a value."}),"\n",(0,o.jsx)(a.h3,{id:"const",children:"const"}),"\n",(0,o.jsx)(a.p,{children:"Constants are block-scoped, much like variables declared using the let keyword. The value of a constant can\u2019t be changed through reassignment (i.e. by using the assignment operator), and it can\u2019t be re-declared (i.e. through a variable declaration). However, if a constant is an object or array its properties or items can be updated or removed."})]})}function u(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,o.jsx)(a,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);