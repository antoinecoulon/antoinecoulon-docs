"use strict";(self.webpackChunkantoinecoulon_docs=self.webpackChunkantoinecoulon_docs||[]).push([[2882],{1461:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"documentation/G\xe9n\xe9ral/Divers","title":"Notions diverses","description":"Notions diverses de dev","source":"@site/docs/documentation/G\xe9n\xe9ral/Divers.md","sourceDirName":"documentation/G\xe9n\xe9ral","slug":"/documentation/G\xe9n\xe9ral/Divers","permalink":"/antoinecoulon-docs/docs/documentation/G\xe9n\xe9ral/Divers","draft":false,"unlisted":false,"editUrl":"https://github.com/antoinecoulon/antoinecoulon-docs/tree/master/docs/documentation/G\xe9n\xe9ral/Divers.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"description":"Notions diverses de dev"},"sidebar":"tutorialSidebar","previous":{"title":"Documentation","permalink":"/antoinecoulon-docs/docs/category/documentation"},"next":{"title":"Analyse_conception","permalink":"/antoinecoulon-docs/docs/documentation/G\xe9n\xe9ral/Analyse_conception"}}');var i=n(4848),r=n(8453);const o={sidebar_position:1,description:"Notions diverses de dev"},l="Notions diverses",c={},d=[{value:"<em>\xe0 trier et organiser...</em>",id:"\xe0-trier-et-organiser",level:2},{value:"Guard Clauses",id:"guard-clauses",level:2},{value:"Tests",id:"tests",level:2},{value:"Tests unitaires",id:"tests-unitaires",level:3},{value:"Tests fonctionnels",id:"tests-fonctionnels",level:3}];function a(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"notions-diverses",children:"Notions diverses"})}),"\n",(0,i.jsx)(s.h2,{id:"\xe0-trier-et-organiser",children:(0,i.jsx)("em",{children:"\xe0 trier et organiser..."})}),"\n",(0,i.jsx)(s.h2,{id:"guard-clauses",children:"Guard Clauses"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Tests fonctionnels"}),"\n",(0,i.jsx)(s.li,{children:"Logs (Journalisation)"}),"\n",(0,i.jsx)(s.li,{children:"Affichage front Cross-Platform (Android/IOS par ex), Micro-services"}),"\n",(0,i.jsx)(s.li,{children:"Le client peut v\xe9rifier la fonctionnalit\xe9"}),"\n",(0,i.jsx)(s.li,{children:"Centraliser et rendre le code fonctionnel homog\xe8ne"}),"\n",(0,i.jsx)(s.li,{children:"Plus de throw (dans la couche m\xe9tier), moins d'exception"}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Aller plus loin:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://dev.to/maximegel/guard-clauses-explained-13aa",children:"Guard Clauses"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://refactoring.guru/replace-nested-conditional-with-guard-clauses",children:"Replace Nested Conditionnals with Guard Clauses"})}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Ex: Au lieu de if...else, on utilise des codes et des messages associ\xe9s"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"PS D:\\AndroidStudioProjects\\ApiArticle> node app.js\nLe serveur a d\xe9marr\xe9\n2025-03-18T12:56:13.081Z info: Code : 200 - Message : La liste des articles a \xe9t\xe9 r\xe9cup\xe9r\xe9e avec succ\xe8s !\n2025-03-18T13:02:44.447Z info: Code : 200 - Message : La liste des articles a \xe9t\xe9 r\xe9cup\xe9r\xe9e avec succ\xe8s !\n2025-03-18T13:07:44.587Z info: Code : 200 - Message : La liste des articles a \xe9t\xe9 r\xe9cup\xe9r\xe9e avec succ\xe8s !\n"})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"tests",children:"Tests"}),"\n",(0,i.jsx)(s.h3,{id:"tests-unitaires",children:"Tests unitaires"}),"\n",(0,i.jsxs)(s.p,{children:["Tester ",(0,i.jsx)(s.strong,{children:"unitairement"})," des fonctionnalit\xe9s"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Objectif"})," : V\xe9rifier que chaque unit\xe9 ou composant du code fonctionne correctement de mani\xe8re isol\xe9e. Une unit\xe9 peut \xeatre une fonction, une m\xe9thode ou un objet."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Port\xe9e"})," : Tr\xe8s limit\xe9e. Les tests unitaires se concentrent sur une petite partie du code \xe0 la fois."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Ind\xe9pendance"})," : Les tests unitaires sont g\xe9n\xe9ralement ind\xe9pendants les uns des autres. Ils ne d\xe9pendent pas de l'\xe9tat du syst\xe8me ou des autres tests."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Rapidit\xe9"})," : Les tests unitaires sont rapides \xe0 ex\xe9cuter car ils ne n\xe9cessitent pas de configuration complexe ou d'interaction avec des syst\xe8mes externes."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"\xc9criture"})," : Souvent \xe9crits par les d\xe9veloppeurs eux-m\xeames, parfois avant m\xeame que le code soit \xe9crit (dans le cadre du d\xe9veloppement pilot\xe9 par les tests, TDD)."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Outils"})," : Utilisent des frameworks comme JUnit pour Java, NUnit pour .NET, ou pytest pour Python."]}),"\n",(0,i.jsx)(s.h3,{id:"tests-fonctionnels",children:"Tests fonctionnels"}),"\n",(0,i.jsx)(s.p,{children:"Tester une fonctionnalit\xe9, mais enti\xe8re"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Objectif"})," : V\xe9rifier que le syst\xe8me dans son ensemble fonctionne comme pr\xe9vu du point de vue de l'utilisateur final. Ils testent les fonctionnalit\xe9s compl\xe8tes du logiciel."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Port\xe9e"})," : Plus large que les tests unitaires. Ils peuvent couvrir plusieurs composants ou modules du syst\xe8me."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"D\xe9pendance"})," : Les tests fonctionnels peuvent d\xe9pendre de l'\xe9tat du syst\xe8me ou des r\xe9sultats d'autres tests."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Dur\xe9e"})," : Peuvent \xeatre plus longs \xe0 ex\xe9cuter car ils impliquent souvent des interactions avec des bases de donn\xe9es, des interfaces utilisateur, ou d'autres syst\xe8mes externes."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"\xc9criture"})," : Souvent \xe9crits par des testeurs ou des \xe9quipes QA, bien que les d\xe9veloppeurs puissent \xe9galement y contribuer."]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Outils"})," : Utilisent des outils comme Selenium pour les tests d'interface utilisateur, ou des frameworks comme Cucumber pour les tests d'acceptation."]}),"\n",(0,i.jsx)("em",{children:"Les tests unitaires et les tests fonctionnels sont compl\xe9mentaires. Les tests unitaires permettent de s'assurer que chaque composant fonctionne correctement en isolation, tandis que les tests fonctionnels v\xe9rifient que le syst\xe8me dans son ensemble r\xe9pond aux exigences et fonctionne comme pr\xe9vu pour les utilisateurs finaux. Les deux types de tests sont essentiels pour garantir la qualit\xe9 et la fiabilit\xe9 du logiciel."}),"\n",(0,i.jsx)(s.hr,{})]})}function u(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>l});var t=n(6540);const i={},r=t.createContext(i);function o(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);