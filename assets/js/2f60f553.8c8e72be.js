"use strict";(self.webpackChunkantoinecoulon_docs=self.webpackChunkantoinecoulon_docs||[]).push([[4742],{6329:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"documentation/Langages/Python","title":"Python","description":"- Python","source":"@site/docs/documentation/Langages/Python.md","sourceDirName":"documentation/Langages","slug":"/documentation/Langages/Python","permalink":"/antoinecoulon-docs/docs/documentation/Langages/Python","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"PHP / Symfony","permalink":"/antoinecoulon-docs/docs/documentation/Langages/PHP-Symfony"},"next":{"title":"React Native","permalink":"/antoinecoulon-docs/docs/documentation/Langages/React-Native"}}');var i=s(4848),l=s(8453);const t={},a="Python",o={},c=[{value:"G\xe9n\xe9ralit\xe9s",id:"g\xe9n\xe9ralit\xe9s",level:2},{value:"Syntaxe",id:"syntaxe",level:2},{value:"Variables",id:"variables",level:3},{value:"Functions",id:"functions",level:3},{value:"Types",id:"types",level:3},{value:"Strings",id:"strings",level:4},{value:"Split / Join",id:"split--join",level:3},{value:"Op\xe9rateurs",id:"op\xe9rateurs",level:3},{value:"Conditionnelles",id:"conditionnelles",level:3},{value:"Boucles",id:"boucles",level:3},{value:"Fonctions et proc\xe9dures",id:"fonctions-et-proc\xe9dures",level:2},{value:"Retour multiple",id:"retour-multiple",level:3},{value:"Args and Kwargs",id:"args-and-kwargs",level:3},{value:"Les arguments positionnels d\xe9ball\xe9s (*args)",id:"les-arguments-positionnels-d\xe9ball\xe9s-args",level:4},{value:"Les arguments de mots-clefs d\xe9ball\xe9s",id:"les-arguments-de-mots-clefs-d\xe9ball\xe9s",level:4},{value:"User Input",id:"user-input",level:2},{value:"Variables complexes / conteneurs",id:"variables-complexes--conteneurs",level:2},{value:"Dictionnaires",id:"dictionnaires",level:3},{value:"Tuple",id:"tuple",level:3},{value:"Listes",id:"listes",level:3},{value:"Set",id:"set",level:3},{value:"Expressions Lambda",id:"expressions-lambda",level:2},{value:"Comments",id:"comments",level:2},{value:"POO",id:"poo",level:2},{value:"Import de classes",id:"import-de-classes",level:3},{value:"Les classes",id:"les-classes",level:3},{value:"M\xe9thodes",id:"m\xe9thodes",level:4},{value:"Encapsulation",id:"encapsulation",level:4},{value:"@property et cie",id:"property-et-cie",level:4},{value:"D\xe9crire une classe",id:"d\xe9crire-une-classe",level:4},{value:"Autres classes sp\xe9ciales",id:"autres-classes-sp\xe9ciales",level:4}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"python",children:"Python"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#python",children:"Python"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#g%C3%A9n%C3%A9ralit%C3%A9s",children:"G\xe9n\xe9ralit\xe9s"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#syntaxe",children:"Syntaxe"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#variables",children:"Variables"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#functions",children:"Functions"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#types",children:"Types"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#strings",children:"Strings"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#split--join",children:"Split / Join"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#op%C3%A9rateurs",children:"Op\xe9rateurs"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#conditionnelles",children:"Conditionnelles"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#boucles",children:"Boucles"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#fonctions-et-proc%C3%A9dures",children:"Fonctions et proc\xe9dures"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#retour-multiple",children:"Retour multiple"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#args-and-kwargs",children:"Args and Kwargs"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#les-arguments-positionnels-d%C3%A9ball%C3%A9s-args",children:"Les arguments positionnels d\xe9ball\xe9s (*args)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#les-arguments-de-mots-clefs-d%C3%A9ball%C3%A9s",children:"Les arguments de mots-clefs d\xe9ball\xe9s"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#user-input",children:"User Input"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#variables-complexes--conteneurs",children:"Variables complexes / conteneurs"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#dictionnaires",children:"Dictionnaires"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#tuple",children:"Tuple"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#listes",children:"Listes"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#set",children:"Set"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#expressions-lambda",children:"Expressions Lambda"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#comments",children:"Comments"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#poo",children:"POO"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#import-de-classes",children:"Import de classes"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#les-classes",children:"Les classes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#m%C3%A9thodes",children:"M\xe9thodes"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#encapsulation",children:"Encapsulation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#property-et-cie",children:"@property et cie"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#d%C3%A9crire-une-classe",children:"D\xe9crire une classe"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#autres-classes-sp%C3%A9ciales",children:"Autres classes sp\xe9ciales"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"Docs:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.pythoncheatsheet.org/cheatsheet/basics",children:"Cheatsheet"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"g\xe9n\xe9ralit\xe9s",children:"G\xe9n\xe9ralit\xe9s"}),"\n",(0,i.jsx)(n.p,{children:"Python est un langage open source suivi par une grande communaut\xe9, tr\xe8s active."}),"\n",(0,i.jsx)(n.p,{children:"Il est surtout utilis\xe9 pour:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Scripting et automatisation: effectuer des op\xe9rations directement sur le syst\xe8me de fichiers, automatiser des t\xe2ches sur plusieurs plateformes."}),"\n",(0,i.jsx)(n.li,{children:'Applications "lourdes"'}),"\n",(0,i.jsx)(n.li,{children:"Applications Web: par ex avec Django ou Flask."}),"\n",(0,i.jsx)(n.li,{children:"mais aussi: data sciences, IA, jeux vid\xe9os..."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"C'est un langage interpr\xe9t\xe9 mais aussi compil\xe9 (de mani\xe8re transparente)."}),"\n",(0,i.jsx)(n.p,{children:"Il est ind\xe9pendant des plateformes car il est execut\xe9 sur la Python Virtual Machine (PVM)."}),"\n",(0,i.jsx)(n.p,{children:"On code dans des fichiers exemple.py qui sont compil\xe9s en exemple.pyc (fichiers ByteCode) avant d'\xeatre interpr\xe9t\xe9 par la VM Python."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"syntaxe",children:"Syntaxe"}),"\n",(0,i.jsx)(n.p,{children:'Fin d\'instruction: touche "entr\xe9e".'}),"\n",(0,i.jsx)(n.p,{children:'Indentation: "4 espaces"'}),"\n",(0,i.jsx)(n.p,{children:"Commentaires:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# commentaire en ligne\n" Chaine de caract\xe8re et commente sur une ligne "\n""" Commentaire de type paragraphe\npermet la documentation """\n'})}),"\n",(0,i.jsx)(n.h3,{id:"variables",children:"Variables"}),"\n",(0,i.jsx)(n.p,{children:"Le nom d'une variable doit \xeatre compos\xe9 uniquement de:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"lettres (minuscules, majuscules)"}),"\n",(0,i.jsx)(n.li,{children:"chiffres"}),"\n",(0,i.jsx)(n.li,{children:'symbole "_"'}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Ne doit pas commencer par un chiffre. Ne doit pas \xeatre un mot-cl\xe9 Python (import keyword). Sensible \xe0 la casse. lower_snake_case pour la lisibilit\xe9."}),"\n",(0,i.jsx)(n.p,{children:"L'affectation d'une valeur \xe0 une variable est obligatoire:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"nom_de_la_variable = valeur\n\nautre_variable # NameError: name *** is not defined\n\nnom_de_la_variable:type = valeur\n# accept\xe9 mais purement informel\n"})}),"\n",(0,i.jsx)(n.h3,{id:"functions",children:"Functions"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def add(val1, val2):\n    print("Addition: ", val1, "+", val2)\n    result = val1 + val2\n    return result\n\nsomme = add(a, b)\nprint("R\xe9sultat =", somme)\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"types",children:"Types"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"bool (Boolean) - True/False"}),"\n",(0,i.jsx)(n.li,{children:"int / float (Numerics)"}),"\n",(0,i.jsx)(n.li,{children:"str (String)"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"strings",children:"Strings"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"msg='welcome to Python 101: Strings'\nprint(msg) # welcome to Python 101: Strings\nprint(msg.upper()) # WELCOME TO PYTHON 101: STRINGS\nprint(msg.lower()) # welcome to python 101: strings\nprint(msg.capitalize()) # Welcome to python 101: strings\nprint(msg.title()) # Welcome To Python 101: Strings\n\nprint(len(msg)) # 30\nprint(msg.count('o')) # 3\n\nprint(msg[0]) # w\nprint(msg[-1]) # s\nprint(msg[2:]) # lcome to Python 101: Strings\nprint(msg[2:15]) # lcome to Pyth\n\nmsg='welcome to Python 101: Strings'\nmsg1=msg[18]+' '+msg[:8]+msg[25:29]+msg[7:11]+msg[13]+msg[12]+msg[2]+msg[1]+msg[-5]  \nprint(msg1.title()) # 1 Welcome Ring To Tyler\nprint(msg1[::-1].title()) # Relyt Ot Gnir Emoclew 1\n\nprint(msg.find('Python')) # 11\nprint(msg.find('h')) # 14\n\nprint(msg.replace('Python','Java')) # Welcome to Java 101: Strings\n\nprint('Python' in msg) # True\n\nmsg=\"\"\"Dear Terry,,\nYou must cut down the mightiest \ntree in the forest with\u2026\na herring! <3\"\"\"\nprint(msg)\n\nname='TERRY'\ncolor = 'RED'\nmsg = '[' + name + '] loves the color ' + color.lower() + '!'\nmsg1 = f'[{name}] loves the color {color.lower()}!'\nprint(msg) # [TERRY] loves the color red!\nprint(msg1) # [TERRY] loves the color red!\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"split--join",children:"Split / Join"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"msg ='Welcome to Python 101: Split and Join'\nprint(msg.split()) # ['Welcome', 'to', 'Python', '101:', 'Split', 'and', 'Join']\n\ncsv = 'Eric,John,Michael,Terry,Graham'\nprint(csv.split(',')) # ['Eric', 'John', 'Michael', 'Terry', 'Graham']\n\nfriends_list = ['Eric','John','Michael','Terry','Graham']\nprint('-'.join(friends_list)) # Eric-John-Michael-Terry-Graham\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"op\xe9rateurs",children:"Op\xe9rateurs"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Assignation: '=' ('+=', '-=', '*=', etc)"}),"\n",(0,i.jsx)(n.li,{children:"Concat\xe9nation: '+' (fonctions de conversion: int(...), float(...), str(...), etc car le typage est fort)"}),"\n",(0,i.jsx)(n.li,{children:"Comparaison: '>', '>=', '==', etc"}),"\n",(0,i.jsx)(n.li,{children:"Logique: 'and', 'or', 'not', '&', '|'"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"conditionnelles",children:"Conditionnelles"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# if condition1: ... elif condition2: ... else: ...\nif age >= AGE_ADULT:\n    print("majeur")\nelse:\n    print("mineur")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"boucles",children:"Boucles"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# while condition: ...\nwhile i > 10:\n    ...\n\nwhile True:\n    i += 1\n    if i <= 10: break\n\n# for nb_cylcle in range(cycle_max): ...\nfor i in range(10):\n    ...\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"fonctions-et-proc\xe9dures",children:"Fonctions et proc\xe9dures"}),"\n",(0,i.jsx)(n.p,{children:"Syntaxe des proc\xe9dures :"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def my_procedure():\n    pass \n    # bloc d'instructions \n# fin de la proc\xe9dure\n"})}),"\n",(0,i.jsx)(n.p,{children:"Syntaxe des fonctions :"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def my_function(): \n    # bloc d'instructions \n    return a_value # fin de la m\xe9thode \n# fin de la fonction\n"})}),"\n",(0,i.jsx)(n.p,{children:"Exemple d\u2019appel :"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"my_procedure() # appel de proc\xe9dure trait\xe9e \nmy_fonction() # appel de fonction trait\xe9e \nnot_treated() # NameError: name \u2018not_treated' is not define\n"})}),"\n",(0,i.jsx)(n.h3,{id:"retour-multiple",children:"Retour multiple"}),"\n",(0,i.jsx)(n.p,{children:"Syntaxe :"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def my_function(): # bloc d'instructions \n    return a_value, other_value # au moins une valeur par return \n# fin de la m\xe9thode\n"})}),"\n",(0,i.jsx)(n.p,{children:"Exemples d\u2019Appel :"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"my_function() \na_result, other_result = my_function() # r\xe9cup\xe9ration unitaire des valeurs\na_result = my_function() # r\xe9cup\xe9ration d'un ensemble de valeurs (n-uplet) \n"})}),"\n",(0,i.jsx)(n.p,{children:"Cette sp\xe9cificit\xe9 est appel\xe9e retour de valeurs multiples."}),"\n",(0,i.jsx)(n.p,{children:"Exemple avec la class tuple (un n-uplet):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def ma_methode(a, b):\n    return a * b\n\nprint(ma_methode(1, 2))\nprint(ma_methode(b=2, a=1))\n\n# Retours multiples\ndef ma_methode2(a, b = 5):\n    return a * 2, b * 2\n\nc = ma_methode2(a=3)\nprint(c)\nprint(type(c)) # class \'tuple\' (iterable)\n\nune_liste = [1, 2, 3]\nprint(une_liste)\nprint(type(une_liste)) # class \'list\'\nune_autre_liste = [1, "2", 3]\n\nun_tuple = (1, "2", 3)\nprint(un_tuple)\n\nune_liste[1] = "autre nombre (string)"\nprint(une_liste)\n# un_tuple[1] = "autre nombre (string)" # ERROR !\n# print(un_tuple)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"args-and-kwargs",children:"Args and Kwargs"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"*args"})," and ",(0,i.jsx)(n.code,{children:"**kwargs"})," allow you to pass an undefined number of arguments and keywords when calling a function."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:">>> def some_function(*args, **kwargs):\n...     pass\n...\n>>> # call some_function with any number of arguments\n>>> some_function(arg1, arg2, arg3)\n\n>>> # call some_function with any number of keywords\n>>> some_function(key1=arg1, key2=arg2, key3=arg3)\n\n>>> # call both, arguments and keywords\n>>> some_function(arg, key1=arg1)\n\n>>> # or none\n>>> some_function()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Python conventions The words *args and **kwargs are conventions. They are not imposed by the interpreter, but considered good practice by the Python community."}),"\n",(0,i.jsx)(n.h4,{id:"les-arguments-positionnels-d\xe9ball\xe9s-args",children:"Les arguments positionnels d\xe9ball\xe9s (*args)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Syntaxe"}),": def my_function(*args)"]}),"\n",(0,i.jsx)(n.p,{children:"You can access the arguments through the args variable:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:">>> def some_function(*args):\n...     print(f'Arguments passed: {args} as {type(args)}')\n...\n>>> some_function('arg1', 'arg2', 'arg3')\n# Arguments passed: ('arg1', 'arg2', 'arg3') as <class 'tuple'>\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def make_sum(*integers):    \n    total = 0    \n    for integer in integers:        \n        total += integer    \n        return total \n        \nprint("La somme de 1, 2, 3 et 4 est", make_sum(1, 2, 3, 4))\n'})}),"\n",(0,i.jsx)(n.h4,{id:"les-arguments-de-mots-clefs-d\xe9ball\xe9s",children:"Les arguments de mots-clefs d\xe9ball\xe9s"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Syntaxe"}),": def my_function(**kwargs)"]}),"\n",(0,i.jsx)(n.p,{children:"Keywords are accessed through the kwargs variable:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:">>> def some_function(**kwargs):\n...     print(f'keywords: {kwargs} as {type(kwargs)}')\n...\n>>> some_function(key1='arg1', key2='arg2')\n# keywords: {'key1': 'arg1', 'key2': 'arg2'} as <class 'dict'>\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def describe_user(**attributes):    \n    result = "La personne a pour "    \n    for key, value in attributes.items(): \n        result += str(key) + " " + str(value) + " et "    \n        return result[:-4] # suppression des 4 derniers caract\xe8res \n    \nprint(describe_user(last_name="DUPONT", first_name="Jean"))\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"user-input",children:"User Input"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"name= input('What is your name?: ')\nage=input('What is your age?: ')\nprint('Hello '+ name + '! You are '+ age + ' years old.')\n\nname = input('Enter your name: ') # Input: 'John'\ndistance_km = input('Enter distance in km: ') # Input: '10'\ndistance_mi = float(distance_km)/1.609\nprint(f'Hi {name.title()}! {distance_km}km is equivalent to {distance_mi} miles.')\n# Hi John! 10km is equivalent to 6.215040397762586 miles.\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"variables-complexes--conteneurs",children:"Variables complexes / conteneurs"}),"\n",(0,i.jsx)(n.h3,{id:"dictionnaires",children:"Dictionnaires"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"\"\"\" Dictionnaire: 'objet' avec couples key-value : <class 'dict'> \"\"\"\nd = {'first_param': 1, 'second_param': 2, 'third_param': 3}\nprint(d) # {'first_param': 1, 'second_param': 2, 'third_param': 3}\n\nd['second_param'] = 4\nprint(d) # {'first_param': 1, 'second_param': 4, 'third_param': 3}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Contrairement au tuple, on peut modifier un dictionnaire. (mutable)"}),"\n",(0,i.jsx)(n.h3,{id:"tuple",children:"Tuple"}),"\n",(0,i.jsx)(n.p,{children:"Un tuple est une structure de donn\xe9es qui permet de stocker plusieurs \xe9l\xe9ments dans une seule variable, comme une liste. Mais contrairement aux listes, les tuples sont immuables : on ne peut pas les modifier apr\xe8s leur cr\xe9ation."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"mon_tuple = (1, 2, 3)\n"})}),"\n",(0,i.jsx)(n.p,{children:"On utilise des parenth\xe8ses () pour d\xe9finir un tuple. Il peut contenir plusieurs types de donn\xe9es (int, str, float, etc), est immuable, et index\xe9."}),"\n",(0,i.jsx)(n.p,{children:"Un des int\xe9r\xeats de ces tuples est qu'ils sont interpr\xe9t\xe9s plus rapidement par la machine, il est donc plus rapide d'it\xe9rer sur un tuple que sur une liste, par exemple."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"Exemple cas r\xe9el"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'villes = [\n    ("Paris", 48.8566, 2.3522),\n    ("Lyon", 45.7640, 4.8357),\n    ("Marseille", 43.2965, 5.3698)\n]\n\nfor ville in villes:\n    nom, lat, long = ville\n    print(f"{nom} est situ\xe9e \xe0 {lat}\xb0N, {long}\xb0E")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"listes",children:"Listes"}),"\n",(0,i.jsx)(n.p,{children:"Une liste est une structure de donn\xe9es modulable qui permet de stocker plusieurs \xe9l\xe9ments dans une seule variable. C\u2019est l\u2019un des types les plus utilis\xe9s en Python."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"ma_liste = [1, 2, 3]\n"})}),"\n",(0,i.jsx)(n.p,{children:"On utilise des crochets [] pour d\xe9finir une liste. Une liste est modifiable (ajouter, retirer, modifier des \xe9l\xe9ments), index\xe9e (comme une cha\xeene de caract\xe8res ou un tuple) et peut contenir diff\xe9rents types (nombres, cha\xeenes, bool\xe9ens, etc.)."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'animaux = ["chat", "chien", "lapin"]\n\nprint(animaux[0])  # "chat"\n\nanimaux[1] = "tigre"  # On remplace "chien" par "tigre"\nprint(animaux)  # ["chat", "tigre", "lapin"]\n'})}),"\n",(0,i.jsx)(n.p,{children:"Fonctions utiles avec les listes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"append(x)"}),": Ajoute x \xe0 la fin"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"insert(i, x)"}),": Ins\xe8re x \xe0 l\u2019indice i"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"remove(x)"}),": Supprime la premi\xe8re occurrence de x"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"pop(i)"}),": Supprime l\u2019\xe9l\xe9ment \xe0 l\u2019indice i"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"len(liste)"}),": Donne la taille"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"in"}),": V\xe9rifie si un \xe9l\xe9ment est dans la liste"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"sort()"}),": Trie la liste (croissant par d\xe9faut)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Exemple concret : liste de courses"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'courses = ["pomme", "pain", "lait"]\n\n# Ajouter un \xe9l\xe9ment\ncourses.append("\u0153ufs")\n\n# Supprimer un \xe9l\xe9ment\ncourses.remove("pain")\n\n# Modifier un \xe9l\xe9ment\ncourses[0] = "banane"\n\n# Afficher les \xe9l\xe9ments\nfor aliment in courses:\n    print("- " + aliment)\n\n"""\n- banane\n- lait\n- \u0153ufs\n"""\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"friends = ['John','Michael','Terry','Eric','Graham'] # Cr\xe9er une liste avec []\n\nprint(friends[1],friends[4]) # Utiliser ses index\nprint(friends[2:4]) # R\xe9cup\xe9rer les \xe9l\xe9ments en position 2 et 3 (4 non inclus)\nprint(len(friends)) # R\xe9cup\xe9rer la longueur/taille d'une liste\nprint(friends.index('Eric')) # R\xe9cup\xe9rer l'index de la liste o\xf9 l'on trouve la valeur 'Eric'\nprint(friends.count('Eric')) # Compter le nombre de fois que l'on trouve 'Eric' dans cette liste\n\n# Trier une liste\nfriends.sort()\nfriends.sort(reverse=True)\n\n# min, max, sum\nlist = [1, 2, 3]\nprint(min(list)) # 1\nprint(max(list)) # 3\nprint(sum(list)) # 6\n\n# Ajouter un \xe9l\xe9ment\nfriends.append('Georges')\nfriends.insert(1, 'Georges')\n\nfriends.extends(list) # Ajoute une autre liste \xe0 cette liste\n\n# Supprimer un \xe9l\xe9ment\nfriends.remove('Georges') # Supprimer l'\xe9l\xe9ment 'Georges' de cette liste\nfriends.pop('Georges') # La m\xeame chose mais l'\xe9l\xe9ment supprim\xe9 peut \xeatre stock\xe9, il est retourn\xe9 par la fonction pop\n\nfriends.clear() # Efface le contenu de la liste\ndel friends # Supprimer compl\xe8tement la liste et sa variable\n\n# Copier une liste\nnew_friends = friends[:]\nnew_friends = friends.copy()\nnew_friends = list(friends)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"set",children:"Set"}),"\n",(0,i.jsx)(n.p,{children:"Les sets ressemblent beaucoup aux listes (ce sont des listes non ordonn\xe9s) et permettent \xe0 peu pr\xe8s les m\xeames choses. Les diff\xe9rences majeures sont:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Un Set va automatiquement supprimer les doublons qu'il contient."}),"\n",(0,i.jsx)(n.li,{children:"Un Set est beaucoup plus rapide \xe0 parcourir ses membres qu'une liste peut l'\xeatre."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# List\nfriends = ['John','Michael','Terry','Eric','Graham']\n\n# Tuple\nfriends_tuple = ('John','Michael','Terry','Eric','Graham')\n\n# Set\nfriends_set = {'John','Michael','Terry','Eric','Graham','Eric'} # 'Eric' sera supprim\xe9\n\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"expressions-lambda",children:"Expressions Lambda"}),"\n",(0,i.jsx)(n.p,{children:"Instruction qui se comporte comme une petite fonction, peut prendre n\u2019importe quel nombre d\u2019arguments, mais renvoie qu\u2019une seule expression."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# my_lambda = lambda arg1, arg2, \u2026 : result\n\npower = lambda nb, exp : nb ** exp # nombre puissance exposant\n\nadd = lambda a, b: a + b\nadd(5, 3) # 8\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"comments",children:"Comments"}),"\n",(0,i.jsx)(n.p,{children:"Les commentaires ont 3 raisons d'exister:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pour faire des notes, pour soi-m\xeame ou pour d'autres d\xe9veloppeurs, au sein du code (ex: todos)"}),"\n",(0,i.jsx)(n.li,{children:"Pour d\xe9bugger, en commentant une ligne de code pour voir ce qu'il se passe par ex."}),"\n",(0,i.jsx)(n.li,{children:"Pour auto-g\xe9n\xe9rer de la documentation de son code"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Single line comment\n\n'''\nMultiple \nlines \ncomment\n'''\n\n\"\"\"Auto-generated documentation\"\"\"\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"poo",children:"POO"}),"\n",(0,i.jsx)(n.h3,{id:"import-de-classes",children:"Import de classes"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import math\n\nPI = math.pi\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from math import pi\n\nPI = pi\n"})}),"\n",(0,i.jsx)(n.h3,{id:"les-classes",children:"Les classes"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class Chat:\n    race = 'siamois'    # Attribut de classe (commun \xe0 toute la classe)\n    \n    def __init__(self, nom):    # Attribut sp\xe9cifique \xe0 chaque instance\n        self.nom = nom\n\nc = Chat('Pablo')\nprint(c.nom) # 'Pablo'\nprint(c.race) # 'siamois'\n\nc.age = 8 # On peut d\xe9finir une propri\xe9t\xe9 \xe0 la vol\xe9e\nprint(c.age) # 8\n"})}),"\n",(0,i.jsx)(n.h4,{id:"m\xe9thodes",children:"M\xe9thodes"}),"\n",(0,i.jsx)(n.p,{children:"Il existe 3 types de m\xe9thodes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["M\xe9thode d'instance: avec ",(0,i.jsx)(n.code,{children:"self"})," en premier param\xe8tre"]}),"\n",(0,i.jsxs)(n.li,{children:["M\xe9thode de classe: sur la classe ou l'instance avec l'annotation ",(0,i.jsx)(n.code,{children:"@classmethod"})]}),"\n",(0,i.jsxs)(n.li,{children:["M\xe9thode statique: sur la classe ou l'instance avec l'annotation ",(0,i.jsx)(n.code,{children:"@staticmethod"})]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"encapsulation",children:"Encapsulation"}),"\n",(0,i.jsxs)(n.p,{children:["Python ne peut pas assurer strictement l'encapsulation: tout est modifiable, soit tout est de visibilit\xe9 ",(0,i.jsx)(n.strong,{children:"publique"})," ! Par convention on indique un attribut ",(0,i.jsx)(n.strong,{children:"priv\xe9"})," en le pr\xe9fixant par '_' (ou '__' pour un attribut ",(0,i.jsx)(n.strong,{children:"non-visible"}),"). Mais cela n'emp\xeache pas r\xe9ellement d'y acc\xe9der. L'import d'un module ne va pas importer les m\xe9thodes invisibles."]}),"\n",(0,i.jsxs)(n.p,{children:["On ajoute des getters et des setters pour autoriser la consultation et/ou la modification sans passer par les attributs directement. Il existe aussi la m\xe9thode ",(0,i.jsx)(n.code,{children:"property()"})," (propri\xe9t\xe9s d'instance), mais ce n'est toujours pas la meilleure pratique..."]}),"\n",(0,i.jsx)(n.h4,{id:"property-et-cie",children:"@property et cie"}),"\n",(0,i.jsxs)(n.p,{children:["La meilleure pratique est d'utiliser les annotations ",(0,i.jsx)(n.code,{children:"@property"})," et celles qui en d\xe9coulent:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'    _nom = "F\xe9lix"\n    \n    @property\n    def nom(self):\n        return self._nom\n\n    @nom.setter\n    def nom(self, value):\n        self._nom = value\n\n    @nom.deleter\n    def nom(self):\n        self._nom = "Sans nom"\n\nchat.nom = "Pablo" # \xe9vite de faire chat._nom\n'})}),"\n",(0,i.jsx)(n.h4,{id:"d\xe9crire-une-classe",children:"D\xe9crire une classe"}),"\n",(0,i.jsxs)(n.p,{children:["On peut ajouter une description avec un commentaire (pour la m\xe9thode help) et ajouter une m\xe9thode d'affichage de l'instance avec ",(0,i.jsx)(n.code,{children:"__str__(self)"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'class Chat:\n    """ Description d\'un chat """\n    nom = "Pablo"\n\n    def __init__(self):\n        ...\n    \n    def __str__(self):\n        return self.nom\n'})}),"\n",(0,i.jsx)(n.h4,{id:"autres-classes-sp\xe9ciales",children:"Autres classes sp\xe9ciales"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def __eq__(self, other):\n    return self.nom == other.nom\n\n# Il est possible de red\xe9finir n'importe quelle m\xe9thode sp\xe9ciale\n\n# Voir les m\xe9thodes accessibles \xe0 ma classe:\nprint(dir(Chat))\n"})})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var r=s(6540);const i={},l=r.createContext(i);function t(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);