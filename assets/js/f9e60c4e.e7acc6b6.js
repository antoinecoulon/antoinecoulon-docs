"use strict";(self.webpackChunkantoinecoulon_docs=self.webpackChunkantoinecoulon_docs||[]).push([[5883],{8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var r=n(6540);const a={},s=r.createContext(a);function i(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:t},e.children)}},9727:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"documentation/G\xe9n\xe9ral/POO","title":"POO","description":"Programmation Orient\xe9e Objet","source":"@site/docs/documentation/G\xe9n\xe9ral/POO.md","sourceDirName":"documentation/G\xe9n\xe9ral","slug":"/documentation/G\xe9n\xe9ral/POO","permalink":"/antoinecoulon-docs/docs/documentation/G\xe9n\xe9ral/POO","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"description":"Programmation Orient\xe9e Objet"},"sidebar":"tutorialSidebar","previous":{"title":"Machine Learning","permalink":"/antoinecoulon-docs/docs/documentation/G\xe9n\xe9ral/Machine_learning"},"next":{"title":"Sommaire","permalink":"/antoinecoulon-docs/docs/documentation/Langages/intro"}}');var a=n(4848),s=n(8453);const i={description:"Programmation Orient\xe9e Objet"},o="POO",c={},l=[{value:"this",id:"this",level:2}];function u(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"poo",children:"POO"})}),"\n",(0,a.jsx)(t.h2,{id:"this",children:"this"}),"\n",(0,a.jsx)(t.p,{children:"En POO, le mot-cl\xe9 this est utilis\xe9 pour faire r\xe9f\xe9rence \xe0 l'instance actuelle d'une classe."}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"R\xe9f\xe9rence \xe0 l'instance actuelle"})," : this permet d'acc\xe9der aux attributs et m\xe9thodes de l'objet courant. C'est particuli\xe8rement utile lorsque vous avez des noms de variables ou de param\xe8tres qui se chevauchent."]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Distinction entre variables locales et attributs"})," : Si une m\xe9thode a un param\xe8tre ou une variable locale portant le m\xeame nom qu'un attribut de la classe, this permet de distinguer l'attribut de la classe de la variable locale."]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Appel de constructeurs"})," : Dans certains langages comme Java, this peut \xeatre utilis\xe9 pour appeler un autre constructeur de la m\xeame classe."]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Retourner l'instance courante"})," : this peut \xeatre utilis\xe9 pour retourner l'instance courante d'une classe, ce qui est utile pour l'encha\xeenement de m\xe9thodes."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-java",children:'public class Voiture {\n    private String marque;\n    private String modele;\n\n    // Constructeur\n    public Voiture(String marque, String modele) {\n        this.marque = marque;  // this.marque fait r\xe9f\xe9rence \xe0 l\'attribut de la classe\n        this.modele = modele;  // this.modele fait r\xe9f\xe9rence \xe0 l\'attribut de la classe\n    }\n\n    // M\xe9thode pour afficher les d\xe9tails de la voiture\n    public void afficherDetails() {\n        System.out.println("Marque: " + this.marque + ", Mod\xe8le: " + this.modele);\n    }\n}\n'})}),"\n",(0,a.jsx)(t.p,{children:"Dans cet exemple, this.marque et this.modele font r\xe9f\xe9rence aux attributs de l'instance actuelle de la classe Voiture. Cela permet de distinguer les param\xe8tres du constructeur des attributs de la classe."})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}}}]);